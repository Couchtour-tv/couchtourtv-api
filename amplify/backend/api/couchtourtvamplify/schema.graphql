type User
  @model {
    id: ID!
    username: String!
    avatar: String
    status: String
    chatRoomUser: [ChatRoomUser] @connection(keyName:"byUser", fields: ["id"])
    invitation: [Invitation] @connection(fields: ["id"])
}

type ChatRoomUser 
  @model
  @key(name: "byUser", fields: ["userID", "chatRoomID"])
  @key(name: "byChatRoom", fields: ["chatRoomID", "userID"]) {
    id: ID!
    userID: ID!
    chatRoomID: ID!
    user: User @connection(fields: ["userID"])
    chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
  }

type ChatRoom
  @model {
    id: ID!
    chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
    messages: [Message] @connection(keyName: "byChatRoom", fields: ["id"])
    lastMessageID: ID
    lastMessage: Message @connection(fields: ["lastMessageID"])
  }

type Invitation
  @model 
  @key(name: "invitationByInvitedUser", fields: ["invitedUserID", "createdByUserID"])
  @key(name: "invitationByCreatedByUser", fields: ["createdByUserID", "invitedUserID"]) {
    id: ID!
    invitedUser: User @connection(fields: ["invitedUserID"])
    createdByUser: User @connection(fields: ["createdByUserID"])
    invitedUserID: ID!
    createdByUserID: ID!
    chatRoomID: ID!
    chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
    status: InvitationStatus
}

enum InvitationStatus {
  accepted
  invited
  rejected
  expired
}

type Message 
  @model
  @key(name: "byChatRoom", fields: ["chatRoomID", "createdAt"], queryField: "messagesByChatRoom") {
    id: ID!
    createdAt: String!
    content: String!
    userID: ID!
    chatRoomID: ID!
    user: User @connection(fields: ["userID"])
    chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
  }