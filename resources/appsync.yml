 Resources: # most of these resources are already in our resources folder in couchtourtv-api
    # CognitoIdentityPoolRoles:
    #   Type: AWS::Cognito::IdentityPoolRoleAttachment
    #   Properties:
    #     IdentityPoolId:
    #       Ref: CognitoIdentityPool
    #     Roles:
    #       authenticated:
    #         Fn::GetAtt: [CognitoAuthRole, Arn]
    #       unauthenticated:
    #         Fn::GetAtt: [CognitoUnauthRole, Arn]
    # CognitoAuthRole:
    #   Type: AWS::IAM::Role
    #   Properties:
    #     RoleName: cognito_sls_appsync_appAuthRole
    #     Path: /
    #     AssumeRolePolicyDocument:
    #       Version: "2012-10-17"
    #       Statement:
    #         - Effect: "Allow"
    #           Principal:
    #             Federated: "cognito-identity.amazonaws.com"
    #           Action:
    #             - "sts:AssumeRoleWithWebIdentity"
    #           Condition:
    #             StringEquals:
    #               "cognito-identity.amazonaws.com:aud":
    #                 Ref: CognitoIdentityPool
    #             "ForAnyValue:StringLike":
    #               "cognito-identity.amazonaws.com:amr": authenticated
    #     Policies:
    #       - PolicyName: "CognitoAuthorizedPolicy"
    #         PolicyDocument:
    #           Version: "2012-10-17"
    #           Statement:
    #             - Effect: "Allow"
    #               Action:
    #                 - "mobileanalytics:PutEvents"
    #                 - "cognito-sync:*"
    #                 - "cognito-identity:*"
    #               Resource: "*"
    #             - Effect: "Allow"
    #               Action:
    #                 - "execute-api:Invoke"
    #               Resource: "*"
    # CognitoUnauthRole:
    #   Type: AWS::IAM::Role
    #   Properties:
    #     RoleName: cognito_sls_appsync_appUnauthRole
    #     Path: /
    #     AssumeRolePolicyDocument:
    #       Version: "2012-10-17"
    #       Statement:
    #         - Effect: "Allow"
    #           Principal:
    #             Federated: "cognito-identity.amazonaws.com"
    #           Action:
    #             - "sts:AssumeRoleWithWebIdentity"
    #           Condition:
    #             StringEquals:
    #               "cognito-identity.amazonaws.com:aud":
    #                 Ref: CognitoIdentityPool
    #             "ForAnyValue:StringLike":
    #               "cognito-identity.amazonaws.com:amr": unauthenticated
    #     Policies:
    #       - PolicyName: "CognitoUnauthorizedPolicy"
    #         PolicyDocument:
    #           Version: "2012-10-17"
    #           Statement:
    #             - Effect: "Allow"
    #               Action:
    #                 - "mobileanalytics:PutEvents"
    #                 - "cognito-sync:*"
    #                 - "cognito-identity:*"
    #               Resource: "*"
    # AppSync lambda role
    AppSyncLambdaServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "Lambda-${self:custom.appSync.serviceRole}"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "Lambda-${self:custom.appSync.serviceRole}-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "lambda:invokeFunction"
                  Resource:
                    - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-dev-graphql"
                    - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-dev-graphql:*"