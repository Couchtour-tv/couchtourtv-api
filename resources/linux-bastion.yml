Parameters:
  AppSecurityGroupParameter:
    Type: String
    Default: sg-0d83d2d74da4d13a0
  AppSubnet1Parameter:
    Type: String
    Default: subnet-07c41b4d72bb633ba
  AppSubnet2Parameter:
    Type: String
    Default: subnet-0a5b45ebc47fbda66
Resources:
  Logs:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 7
  EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  BastionSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Linux Bastion Host ssh and ICMP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "Linux Bastion"

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref IAMRole

  IAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: "/"
      Policies:
        - PolicyName: "ec2"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:AssociateAddress"
                  - "ec2:DescribeVolumeStatus"
                  - "ec2:DescribeTag"
                  - "ec2:DescribeVolumes"
                  - "ec2:DescribeVolumeAttribute"
                Resource:
                  - "*"
        - PolicyName: "ec2tag"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateTags"
                Resource:
                  - "arn:aws:ec2:*:*:volume/*"
        - PolicyName: logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource:
                  - "arn:aws:logs:*:*:*"

  LaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Metadata:
      "AWS::CloudFormation::Init":
        configSets:
          default: awslogs, config
        awslogs:
          packages:
            yum:
              awslogs: []
          files:
            "/etc/awslogs/awscli.conf":
              content: !Sub |
                [default]
                region = ${AWS::Region}
                [plugins]
                cwlogs = cwlogs
              mode: "000644"
              owner: root
              group: root
            "/etc/awslogs/awslogs.conf":
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state
                [/var/log/messages]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/messages
                log_stream_name = {instance_id}/var/log/messages
                log_group_name = ${Logs}
                [/var/log/secure]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/secure
                log_stream_name = {instance_id}/var/log/secure
                log_group_name = ${Logs}
                [/var/log/cron]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cron
                log_stream_name = {instance_id}/var/log/cron
                log_group_name = ${Logs}
                [/var/log/cloud-init.log]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cloud-init.log
                log_stream_name = {instance_id}/var/log/cloud-init.log
                log_group_name = ${Logs}
                [/var/log/cfn-init.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-init.log
                log_stream_name = {instance_id}/var/log/cfn-init.log
                log_group_name = ${Logs}
                [/var/log/cfn-hup.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-hup.log
                log_stream_name = {instance_id}/var/log/cfn-hup.log
                log_group_name = ${Logs}
                [/var/log/cfn-init-cmd.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-init-cmd.log
                log_stream_name = {instance_id}/var/log/cfn-init-cmd.log
                log_group_name = ${Logs}
                [/var/log/cloud-init-output.log]
                file = /var/log/cloud-init-output.log
                log_stream_name = {instance_id}/var/log/cloud-init-output.log
                log_group_name = ${Logs}
                [/var/log/dmesg]
                file = /var/log/dmesg
                log_stream_name = {instance_id}/var/log/dmesg
                log_group_name = ${Logs}
              mode: "000644"
              owner: root
              group: root
          services:
            sysvinit:
              awslogs:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                    - awslogs
                files:
                  - "/etc/awslogs/awslogs.conf"
                  - "/etc/awslogs/awscli.conf"
        config:
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: "000400"
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfiguration.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=LaunchConfiguration
                runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
    Properties:
      AssociatePublicIpAddress: true
      EbsOptimized: false
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: ami-0915bcb5fa77e4892
      InstanceType: t3.micro
      SecurityGroups:
        - !Ref BastionSecurityGroup
      KeyName: branchDNA-production
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash -x
          for i in $(aws ec2 describe-volumes --region=${AWS::Region} --filters "Name=attachment.instance-id, Values=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" Name=attachment.device,Values=/dev/xvda --query "Volumes[].VolumeId" --out text) ; do aws --region=${AWS::Region} ec2 create-tags --resources $i --tags Key=Name,Value=Bastion-/dev/sda1 ; done
          yum update -y
          yum install amazon-ssm-agent python-deltarpm -y
          start amazon-ssm-agent | true
          echo "start amazon-ssm-agent" >> /etc/rc.local
          bash -ex << "TRY"
            INSTANCEID=$(curl -s -m 60 http://169.254.169.254/latest/meta-data/instance-id)
            aws --region ${AWS::Region} ec2 associate-address --instance-id $INSTANCEID --allocation-id ${EIP.AllocationId}
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}
          TRY
          /opt/aws/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}

  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: 1
      MinSize: 1
      Tags:
        - Key: Name
          Value: Bastion
          PropagateAtLaunch: "true"
        - Key: AmazonLinuxUpdatesScan
          Value: true
          PropagateAtLaunch: "true"
        - Key: AmazonLinuxUpdatesGroup1
          Value: true
          PropagateAtLaunch: "true"
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
