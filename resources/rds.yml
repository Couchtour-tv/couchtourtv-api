Resources:
  RDSCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      MasterUsername: !Sub '{{resolve:secretsmanager:${RDSCredentialSecretStore}:SecretString:username}}'
      MasterUserPassword: !Sub 'resolve:secretsmanager:${RDSCredentialSecretStore}:SecretString:password'
      Engine: aurora-postgresql
      EngineMode: serverless
      DBSubnetGroupName:
        Ref: RDSSubnetGroup
      VpcSecurityGroupIds:
        - !Ref RDSSecurityGroup
      ScalingConfiguration:
        MinCapacity: 2
        MaxCapacity: 8
        AutoPause: true
        SecondsUntilAutoPause: 3600
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable RDS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref AppSecurityGroup
  RDSRecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !GetAtt 'HostedZone.Id'
      Name: !Sub 'db.${self:custom.Route53config.Name}'
      ResourceRecords:
      - !GetAtt 'RDSCluster.Endpoint.Address'
      TTL: '60'
      Type: CNAME
  RDSCredentialSecretStore:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: !Sub RDS-master
      Description: !Sub Credentials for the RDS Service in the ${AWS::StackName} stack
      GenerateSecretString:
        SecretStringTemplate: '{"username": "pgadmin"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
